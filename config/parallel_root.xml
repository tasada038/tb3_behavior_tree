<!--
// MIT License

// Copyright (c) 2023 Takumi Asada

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
-->

<root main_tree_to_execute="BehaviorTree">
    <!-- ////////// -->
    <BehaviorTree ID="BehaviorTree">
        <Parallel failure_threshold="0" success_threshold="3">
            <Action ID="MoveRobot" linear_x="{x}" sleep_mtime="100"/>
            <Fallback>
                <Action ID="CameraDetected"/>
                <Sequence>
                    <Condition ID="ReadingLaser" laser_status="{r}"/>
                    <Action ID="Rotating" laser_status="{r}" linear_x="{x}" sleep_mtime="100"/>
                </Sequence>
            </Fallback>
            <Action ID="Stop" name="stop"/>
        </Parallel>
    </BehaviorTree>
    <!-- ////////// -->
    <TreeNodesModel>
        <Action ID="CameraDetected"/>
        <Action ID="MoveRobot">
            <output_port name="linear_x" type="float"/>
            <input_port name="sleep_mtime" type="int">Simply print the target on console...</input_port>
        </Action>
        <Condition ID="ReadingLaser"/>
        <Action ID="Rotating">
            <input_port name="input" type="float">Simply print the target on console...</input_port>
            <input_port name="linear_x" type="float"/>
            <input_port name="sleep_mtime" type="int">Simply print the target on console...</input_port>
        </Action>
        <Action ID="Stop"/>
    </TreeNodesModel>
    <!-- ////////// -->
</root>
